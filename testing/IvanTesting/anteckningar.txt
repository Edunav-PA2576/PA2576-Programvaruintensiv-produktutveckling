cd C:\Users\Greattech\Documents\GitHub\PA2576-Programvaruintensiv-produktutveckling\Ivantesting


/PA2576-Programvaruintensiv-produktutveckling
‚îÇ‚îÄ‚îÄ /env                # Virtuellt environment (ska ignoreras i Git)
‚îÇ‚îÄ‚îÄ /instance           # SQLite-databas (kan lagras h√§r)
‚îÇ‚îÄ‚îÄ /migrations         # Flask-Migrate filer (om du anv√§nder det)
‚îÇ‚îÄ‚îÄ /static             # CSS, bilder, JavaScript
‚îÇ‚îÄ‚îÄ /templates          # HTML-filer (om du har en frontend)
‚îÇ‚îÄ‚îÄ /models             # Mapp f√∂r databaser och modeller
‚îÇ   ‚îÇ‚îÄ‚îÄ __init__.py     # Initierar models-modulen
‚îÇ   ‚îÇ‚îÄ‚îÄ models.py       # SQLAlchemy-databasmodeller
‚îÇ‚îÄ‚îÄ /routes             # API-endpoints (Flask Blueprints)
‚îÇ   ‚îÇ‚îÄ‚îÄ __init__.py     # Initierar routes-modulen
‚îÇ   ‚îÇ‚îÄ‚îÄ user_routes.py  # Routes f√∂r anv√§ndare
‚îÇ   ‚îÇ‚îÄ‚îÄ post_routes.py  # Routes f√∂r inl√§gg
‚îÇ‚îÄ‚îÄ /services           # Externa API-integrationer (ex. Spotify)
‚îÇ   ‚îÇ‚îÄ‚îÄ spotify_service.py  # Hantering av Spotify API
‚îÇ‚îÄ‚îÄ /utils              # Hj√§lpfunktioner och verktyg
‚îÇ   ‚îÇ‚îÄ‚îÄ helpers.py      # Generella funktioner
‚îÇ‚îÄ‚îÄ app.py              # Flask-applikationens startpunkt
‚îÇ‚îÄ‚îÄ config.py           # Konfigurationsinst√§llningar
‚îÇ‚îÄ‚îÄ requirements.txt    # Lista √∂ver installerade Python-paket
‚îÇ‚îÄ‚îÄ .gitignore          # Filer att ignorera i Git
‚îÇ‚îÄ‚îÄ README.md           # Projektbeskrivning


1Ô∏è‚É£ users (Anv√§ndare)
Motivering: Lagrar grundl√§ggande information om varje anv√§ndare.
Kolumner:
userId (PK)
username
email
password
profile_picture
created_at
2Ô∏è‚É£ profiles (Anv√§ndarprofil)
Motivering: Separat tabell f√∂r anv√§ndares musikpreferenser.
Kolumner:
profileId (PK)
userId (FK ‚Üí users.userId)
bio
favorite_genres
song_of_the_day (FK ‚Üí songs.songId)
Relationer:
1:1 mellan users och profiles (en anv√§ndare har en profil).
M√•nga-till-m√•nga relationer till favoritalbum, artister och l√•tar (se n√§sta tabeller).
3Ô∏è‚É£ songs (L√•tar)
Motivering: Lagrar l√•tar som anv√§ndare kan gilla eller diskutera.
Kolumner:
songId (PK)
title
artistId (FK ‚Üí artists.artistId)
albumId (FK ‚Üí albums.albumId)
cover_url
spotify_url
Relationer:
1:M mellan albums och songs (ett album har m√•nga l√•tar).
4Ô∏è‚É£ albums (Album)
Motivering: Samlar album som anv√§ndare kan framh√§va.
Kolumner:
albumId (PK)
title
artistId (FK ‚Üí artists.artistId)
cover_url
spotify_url
Relationer:
1:M mellan artists och albums (en artist har m√•nga album).
5Ô∏è‚É£ artists (Artister)
Motivering: Lagrar artister som anv√§ndare kan framh√§va eller diskutera.
Kolumner:
artistId (PK)
name
picture_url
spotify_url
6Ô∏è‚É£ user_songs (Anv√§ndarens favorits√•nger)
Motivering: Hanterar m√•nga-till-m√•nga relationen mellan anv√§ndare och favoritl√•tar.
Kolumner:
userId (FK ‚Üí users.userId)
songId (FK ‚Üí songs.songId)
7Ô∏è‚É£ user_albums (Anv√§ndarens favorit-album)
Motivering: Hanterar m√•nga-till-m√•nga relationen mellan anv√§ndare och favorit-album.
Kolumner:
userId (FK ‚Üí users.userId)
albumId (FK ‚Üí albums.albumId)
8Ô∏è‚É£ user_artists (Anv√§ndarens favorit-artister)
Motivering: Hanterar m√•nga-till-m√•nga relationen mellan anv√§ndare och favorit-artister.
Kolumner:
userId (FK ‚Üí users.userId)
artistId (FK ‚Üí artists.artistId)
9Ô∏è‚É£ posts (Inl√§gg)
Motivering: Lagrar inl√§gg d√§r anv√§ndare diskuterar l√•tar, album eller artister.
Kolumner:
postId (PK)
userId (FK ‚Üí users.userId)
songId (FK ‚Üí songs.songId, nullable)
albumId (FK ‚Üí albums.albumId, nullable)
artistId (FK ‚Üí artists.artistId, nullable)
content
created_at
Relationer:
En post kan vara kopplad till en l√•t, ett album eller en artist.
üîü likes (Gilla-markeringar)
Motivering: Anv√§ndare kan gilla inl√§gg.
Kolumner:
likeId (PK)
userId (FK ‚Üí users.userId)
postId (FK ‚Üí posts.postId)
1Ô∏è‚É£1Ô∏è‚É£ comments (Kommentarer)
Motivering: Anv√§ndare kan kommentera inl√§gg.
Kolumner:
commentId (PK)
userId (FK ‚Üí users.userId)
postId (FK ‚Üí posts.postId)
content
created_at
1Ô∏è‚É£2Ô∏è‚É£ followers (F√∂ljare)
Motivering: Hanterar vilka anv√§ndare som f√∂ljer varandra.
Kolumner:
followerId (FK ‚Üí users.userId)
followingId (FK ‚Üí users.userId)


Look up http methods******
GET req = retrivning inforamtion
POST req = uptade / create


***SKRIVS I BASH TERMINALEN***

Skapa en venv (om du inte redan har gjort det en g√•ng innnan)
python3 -m venv env

Starta venv:
source venv/Scripts/activate

Uppdatera requirements:
pip freeze > requirements.txt

installera paket fr√•n requirements:
pip install -r requirements.txt


***SAKER SOM BORDE L√ÑGGAS TILL***

Ifall vi vill l√§gga upp detta p√• en server
session hantering / cookies
CSRF-tokens i HTML formul√§r


